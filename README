 AI-Powered Story Teller

An intelligent storytelling system that generates creative, coherent, and engaging narratives based on user input. Designed using cutting-edge NLP models, this project demonstrates the capability of AI to simulate human-like imagination through story generation.

## 📌 Overview

AI-Powered Story Teller is a Jupyter Notebook-based project that leverages transformer models to create original stories from short user prompts. It serves as a creative AI demonstration for both educational and entertainment purposes, showcasing the potential of generative models in content creation.


## 🚀 Key Features

* 📝 Generate unique stories from custom prompts
* 🤖 Powered by state-of-the-art transformer-based NLP models
* 🔁 Multiple story generations with varied outcomes
* 🧪 Ideal for students, writers, and AI enthusiasts
* 📗 Easy-to-understand and run in any Jupyter Notebook environment

---

## 🛠️ Tech Stack

* **Language:** Python 3.x
* **Framework:** Jupyter Notebook
* **Libraries:**

  * `transformers` (Hugging Face)
  * `torch`
  * `IPython` / `Google Colab` (optional)

## ⚙️ Getting Started

1. **Clone the Repository**

   ```bash
   git clone https://github.com/your-username/AI-Powered-Story-Teller.git
   cd AI-Powered-Story-Teller
   ```

2. **Install Dependencies**

   ```bash
   pip install transformers torch
   ```

3. **Launch the Notebook**

   ```bash
   jupyter notebook storyteller_project.ipynb
   ```

4. **Run the cells** and input your desired prompt to generate a story.


## 💬 Example Prompts

* “A boy finds a portal to another galaxy in his backyard.”
* “A robot learns what it means to dream.”
* “An ancient library opens only during thunderstorms.”

---

## 🎯 Use Cases

* AI-assisted story writing
* Educational demos in Natural Language Generation (NLG)
* Creative content generation
* Children’s storybook ideas


## 🙌 Acknowledgements

* [Hugging Face Transformers](https://huggingface.co/transformers/)
* [PyTorch](https://pytorch.org/)
* [OpenAI GPT Models](https://openai.com/) *(if applicable)*

And also I have uploaded the sample outputs in my github.
